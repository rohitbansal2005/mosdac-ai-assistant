import React, { useState, useEffect, useRef } from 'react';
import { Send, Bot, Search, MapPin, Satellite } from 'lucide-react';
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import KnowledgeGraph from '../components/KnowledgeGraph';
import ChatMessage from '../components/ChatMessage';
import QuerySuggestions from '../components/QuerySuggestions';
import ResponsiveLayout from '../components/ResponsiveLayout';
import EnhancedHeader from '../components/EnhancedHeader';
import SmartStatsCards from '../components/SmartStatsCards';

const Index = () => {
  const [messages, setMessages] = useState([]);
  const [inputValue, setInputValue] = useState('');
  const [isTyping, setIsTyping] = useState(false);
  const [activeTab, setActiveTab] = useState('chat');
  const [currentLanguage, setCurrentLanguage] = useState('en');
  const messagesEndRef = useRef(null);

  // Language-specific welcome messages with space theme
  const welcomeMessages = {
    en: 'ЁЯЪА Welcome to MOSDAC Space AI! I am your intelligent assistant for satellite data, space missions, and ISRO services. Ready to explore the cosmos of data with you! What would you like to discover?',
    hi: 'ЁЯЪА MOSDAC Space AI рдореЗрдВ рдЖрдкрдХрд╛ рд╕реНрд╡рд╛рдЧрдд рд╣реИ! рдореИрдВ satellite data, space missions рдФрд░ ISRO services рдХрд╛ рдЖрдкрдХрд╛ рдмреБрджреНрдзрд┐рдорд╛рди рд╕рд╣рд╛рдпрдХ рд╣реВрдВред рдЖрдкрдХреЗ рд╕рд╛рде data рдХреЗ рдмреНрд░рд╣реНрдорд╛рдВрдб рдХреА рдЦреЛрдЬ рдХреЗ рд▓рд┐рдП рддреИрдпрд╛рд░ рд╣реВрдВ! рдЖрдк рдХреНрдпрд╛ рдЦреЛрдЬрдирд╛ рдЪрд╛рд╣рддреЗ рд╣реИрдВ?',
    bn: 'ЁЯЪА MOSDAC Space AI рждрзЗ рж╕рзНржмрж╛ржЧрждржо! ржЖржорж┐ satellite data, space missions ржПржмржВ ISRO services ржПрж░ ржЬржирзНржп ржЖржкржирж╛рж░ ржмрзБржжрзНржзрж┐ржорж╛ржи рж╕рж╣рж╛ржпрж╝ржХред ржЖржкржирж╛рж░ рж╕рж╛ржерзЗ data ржПрж░ ржорж╣рж╛ржХрж╛рж╢ ржЕржирзНржмрзЗрж╖ржг ржХрж░рждрзЗ ржкрзНрж░рж╕рзНрждрзБржд! ржЖржкржирж┐ ржХрзА ржЖржмрж┐рж╖рзНржХрж╛рж░ ржХрж░рждрзЗ ржЪрж╛ржи?',
    ta: 'ЁЯЪА MOSDAC Space AI роХрпНроХрпБ ро╡ро░ро╡рпЗро▒рпНроХро┐ро▒рпЛроорпН! роиро╛ройрпН satellite data, space missions рооро▒рпНро▒рпБроорпН ISRO services роХрпНроХро╛рой роЙроЩрпНроХро│рпН роЕро▒ро┐ро╡ро╛ро░рпНроирпНрод роЙродро╡ро┐ропро╛ро│ро░рпН. роЙроЩрпНроХро│рпБроЯройрпН data ро╡ро┐ройрпН рокро┐ро░рокроЮрпНроЪродрпНродрпИ роЖро░ро╛роп родропро╛ро░ро╛роХ роЗро░рпБроХрпНроХро┐ро▒рпЗройрпН! роирпАроЩрпНроХро│рпН роОройрпНрой роХрогрпНроЯрпБрокро┐роЯро┐роХрпНроХ ро╡ро┐ро░рпБроорпНрокрпБроХро┐ро▒рпАро░рпНроХро│рпН?',
    te: 'ЁЯЪА MOSDAC Space AI р░Хр░┐ р░╕р▒Нр░╡р░╛р░Чр░др░В! р░ир▒Зр░ир▒Б satellite data, space missions р░ор░░р░┐р░пр▒Б ISRO services р░Хр▒Лр░╕р░В р░ор▒А р░др▒Жр░▓р░┐р░╡р▒Ир░и р░╕р░╣р░╛р░пр░Хр▒Бр░бр░ир▒Бред р░ор▒Ар░др▒Л data р░пр▒Кр░Хр▒Нр░Х р░╡р░┐р░╢р▒Нр░╡р░╛р░ир▒Нр░ир░┐ р░Ер░ир▒Нр░╡р▒Зр░╖р░┐р░Вр░Ър░бр░╛р░ир░┐р░Хр░┐ р░╕р░┐р░жр▒Нр░зр░Вр░Чр░╛ р░Йр░ир▒Нр░ир░╛р░ир▒Б! р░ор▒Ар░░р▒Б р░Пр░ор░┐ р░Хр░ир▒Бр░Чр▒Кр░ир░╛р░▓р░ир▒Бр░Хр▒Бр░Вр░Яр▒Бр░ир▒Нр░ир░╛р░░р▒Б?'
  };

  // Initialize messages with language-specific welcome message
  useEffect(() => {
    setMessages([
      {
        id: 1,
        type: 'bot',
        content: welcomeMessages[currentLanguage],
        timestamp: new Date(),
        entities: []
      }
    ]);
  }, [currentLanguage]);

  const scrollToBottom = () => {
    messagesEndRef.current?.scrollIntoView({ behavior: "smooth" });
  };

  useEffect(scrollToBottom, [messages]);

  // Enhanced multilingual responses with space theme
  const mockResponses = {
    en: [
      {
        keywords: ['weather', 'meteorological', 'temperature', 'rainfall'],
        response: 'ЁЯЫ░я╕П Found meteorological satellite data! INSAT-3D and INSAT-3DR provide comprehensive weather monitoring from space. These advanced satellites deliver temperature profiles, humidity data, and precipitation measurements with global coverage in HDF5 format.',
        entities: ['INSAT-3D', 'INSAT-3DR', 'Temperature', 'Precipitation', 'HDF5']
      },
      {
        keywords: ['ocean', 'oceansat', 'sea surface', 'coastal'],
        response: 'ЁЯМК Oceansat-2 and Oceansat-3 are India\'s ocean observation champions! They monitor ocean color, sea surface temperature, chlorophyll concentration, and coastal zone dynamics. Data available from L1B to L3 processing levels for comprehensive marine analysis.',
        entities: ['Oceansat-2', 'Oceansat-3', 'Ocean Color', 'Sea Surface Temperature', 'L1B', 'L3']
      },
      {
        keywords: ['land', 'vegetation', 'agriculture', 'ndvi'],
        response: 'ЁЯМ▒ Resourcesat series satellites provide excellent land and vegetation monitoring! NDVI calculations, land use/land cover mapping, and agricultural monitoring through AWiFS and LISS sensors for multi-spectral vegetation analysis.',
        entities: ['Resourcesat', 'NDVI', 'AWiFS', 'LISS', 'Land Use', 'Agriculture']
      },
      {
        keywords: ['download', 'access', 'registration', 'login'],
        response: 'ЁЯУе To access MOSDAC space data: 1) Register at mosdac.gov.in/register 2) Verify email 3) Login and explore catalogs 4) Use Data Pool or visualization tools. Some premium products require bulk download approval.',
        entities: ['Registration', 'Data Pool', 'Catalog', 'Bulk Download']
      }
    ],
    hi: [
      {
        keywords: ['weather', 'meteorological', 'temperature', 'rainfall', 'рдореМрд╕рдо', 'рддрд╛рдкрдорд╛рди'],
        response: 'ЁЯЫ░я╕П Meteorological satellite data рдорд┐рд▓ рдЧрдпрд╛! INSAT-3D рдФрд░ INSAT-3DR рдЕрдВрддрд░рд┐рдХреНрд╖ рд╕реЗ comprehensive weather monitoring рдкреНрд░рджрд╛рди рдХрд░рддреЗ рд╣реИрдВред рдпреЗ advanced satellites temperature profiles, humidity data, рдФрд░ precipitation measurements HDF5 format рдореЗрдВ global coverage рдХреЗ рд╕рд╛рде рджреЗрддреЗ рд╣реИрдВред',
        entities: ['INSAT-3D', 'INSAT-3DR', 'Temperature', 'Precipitation', 'HDF5']
      },
      {
        keywords: ['ocean', 'oceansat', 'sea surface', 'coastal', 'рд╕рдореБрджреНрд░', 'рддрдЯреАрдп'],
        response: 'ЁЯМК Oceansat-2 рдФрд░ Oceansat-3 рднрд╛рд░рдд рдХреЗ ocean observation champions рд╣реИрдВ! рдпреЗ ocean color, sea surface temperature, chlorophyll concentration, рдФрд░ coastal zone dynamics рдХреЛ monitor рдХрд░рддреЗ рд╣реИрдВред L1B рд╕реЗ L3 processing levels рддрдХ comprehensive marine analysis рдХреЗ рд▓рд┐рдП data рдЙрдкрд▓рдмреНрдз рд╣реИред',
        entities: ['Oceansat-2', 'Oceansat-3', 'Ocean Color', 'Sea Surface Temperature', 'L1B', 'L3']
      },
      {
        keywords: ['land', 'vegetation', 'agriculture', 'ndvi', 'рднреВрдорд┐', 'рдХреГрд╖рд┐', 'рд╡рдирд╕реНрдкрддрд┐'],
        response: 'ЁЯМ▒ Resourcesat series satellites excellent land рдФрд░ vegetation monitoring рдкреНрд░рджрд╛рди рдХрд░рддреЗ рд╣реИрдВ! NDVI calculations, land use/land cover mapping, рдФрд░ AWiFS рддрдерд╛ LISS sensors рдХреЗ through agricultural monitoring multi-spectral vegetation analysis рдХреЗ рд▓рд┐рдПред',
        entities: ['Resourcesat', 'NDVI', 'AWiFS', 'LISS', 'Land Use', 'Agriculture']
      },
      {
        keywords: ['download', 'access', 'registration', 'login', 'рдбрд╛рдЙрдирд▓реЛрдб', 'рдкрдВрдЬреАрдХрд░рдг'],
        response: 'ЁЯУе MOSDAC space data access рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП: 1) mosdac.gov.in/register рдкрд░ register рдХрд░реЗрдВ 2) Email verify рдХрд░реЗрдВ 3) Login рдХрд░рдХреЗ catalogs explore рдХрд░реЗрдВ 4) Data Pool рдпрд╛ visualization tools use рдХрд░реЗрдВред рдХреБрдЫ premium products рдХреЗ рд▓рд┐рдП bulk download approval рдЪрд╛рд╣рд┐рдПред',
        entities: ['Registration', 'Data Pool', 'Catalog', 'Bulk Download']
      }
    ]
  };

  const generateBotResponse = (userMessage) => {
    const lowerMessage = userMessage.toLowerCase();
    const languageResponses = mockResponses[currentLanguage] || mockResponses.en;
    
    for (const mock of languageResponses) {
      if (mock.keywords.some(keyword => lowerMessage.includes(keyword))) {
        return {
          content: mock.response,
          entities: mock.entities
        };
      }
    }
    
    // Default responses based on language with space theme
    const defaultResponses = {
      en: 'ЁЯЪА I understand you want space-related information! Please be more specific about satellite data, space missions, or ISRO services. Ask about specific satellites, data products, download procedures, or technical specifications.',
      hi: 'ЁЯЪА рдореИрдВ рд╕рдордЭ рдЧрдпрд╛ рдХрд┐ рдЖрдк space-related рдЬрд╛рдирдХрд╛рд░реА рдЪрд╛рд╣рддреЗ рд╣реИрдВ! рдХреГрдкрдпрд╛ satellite data, space missions, рдпрд╛ ISRO services рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рдЕрдзрд┐рдХ specific рдмрддрд╛рдПрдВред Specific satellites, data products, download procedures, рдпрд╛ technical specifications рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рдкреВрдЫреЗрдВред',
      bn: 'ЁЯЪА ржЖржорж┐ ржмрзБржЭрждрзЗ ржкрж╛рж░рж┐ ржпрзЗ ржЖржкржирж┐ space-related рждржерзНржп ржЪрж╛ржи! ржжржпрж╝рж╛ ржХрж░рзЗ satellite data, space missions, ржмрж╛ ISRO services рж╕ржорзНржкрж░рзНржХрзЗ ржЖрж░ржУ specific ржмрж▓рзБржиред Specific satellites, data products, download procedures, ржмрж╛ technical specifications рж╕ржорзНржкрж░рзНржХрзЗ ржЬрж┐ржЬрзНржЮрж╛рж╕ ржХрж░рзБржиред',
      ta: 'ЁЯЪА роирпАроЩрпНроХро│рпН space-related родроХро╡ро▓рпНроХро│рпИ ро╡ро┐ро░рпБроорпНрокрпБроХро┐ро▒рпАро░рпНроХро│рпН роОройрпНро▒рпБ рокрпБро░ро┐роХро┐ро▒родрпБ! Satellite data, space missions, роЕро▓рпНро▓родрпБ ISRO services рокро▒рпНро▒ро┐ рооро┐роХро╡рпБроорпН specific роЖроХ роЪрпКро▓рпНро▓рпБроЩрпНроХро│рпН. Specific satellites, data products, download procedures, роЕро▓рпНро▓родрпБ technical specifications рокро▒рпНро▒ро┐ роХрпЗро│рпБроЩрпНроХро│рпНред',
      te: 'ЁЯЪА р░ор▒Ар░Хр▒Б space-related р░╕р░ор░╛р░Ър░╛р░░р░В р░Хр░╛р░╡р░╛р░▓р░ир░┐ р░Ер░░р▒Нр░ер░ор▒Ир░Вр░жр░┐! Satellite data, space missions, р░▓р▒Зр░жр░╛ ISRO services р░Чр▒Бр░░р░┐р░Вр░Ър░┐ р░ор░░р░┐р░Вр░д specific р░Чр░╛ р░Ър▒Жр░кр▒Нр░кр░Вр░бр░┐ред Specific satellites, data products, download procedures, р░▓р▒Зр░жр░╛ technical specifications р░Чр▒Бр░░р░┐р░Вр░Ър░┐ р░Ер░бр░Чр░Вр░бр░┐ред'
    };
    
    return {
      content: defaultResponses[currentLanguage] || defaultResponses.en,
      entities: ['Help', 'Guidance', 'Specification']
    };
  };

  const handleSendMessage = async () => {
    if (!inputValue.trim()) return;

    const userMessage = {
      id: Date.now(),
      type: 'user',
      content: inputValue,
      timestamp: new Date(),
      entities: []
    };

    setMessages(prev => [...prev, userMessage]);
    setInputValue('');
    setIsTyping(true);

    setTimeout(() => {
      const botResponse = generateBotResponse(inputValue);
      const botMessage = {
        id: Date.now() + 1,
        type: 'bot',
        content: botResponse.content,
        timestamp: new Date(),
        entities: botResponse.entities
      };
      
      setMessages(prev => [...prev, botMessage]);
      setIsTyping(false);
    }, 1500);
  };

  const handleSuggestionClick = (suggestion) => {
    setInputValue(suggestion);
  };

  const handleKeyPress = (e) => {
    if (e.key === 'Enter') {
      handleSendMessage();
    }
  };

  // Language-specific placeholders with space theme
  const placeholders = {
    en: 'ЁЯЫ░я╕П Ask about satellites, space missions, data products...',
    hi: 'ЁЯЫ░я╕П Satellites, space missions, data products рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рдкреВрдЫреЗрдВ...',
    bn: 'ЁЯЫ░я╕П Satellites, space missions, data products рж╕ржорзНржкрж░рзНржХрзЗ ржЬрж┐ржЬрзНржЮрж╛рж╕ ржХрж░рзБржи...',
    ta: 'ЁЯЫ░я╕П Satellites, space missions, data products рокро▒рпНро▒ро┐ роХрпЗро│рпБроЩрпНроХро│рпН...',
    te: 'ЁЯЫ░я╕П Satellites, space missions, data products р░Чр▒Бр░░р░┐р░Вр░Ър░┐ р░Ер░бр░Чр░Вр░бр░┐...'
  };

  // Typing indicators
  const typingTexts = {
    en: 'ЁЯдЦ Space AI is processing...',
    hi: 'ЁЯдЦ Space AI рдкреНрд░реЛрд╕реЗрд╕рд┐рдВрдЧ рдХрд░ рд░рд╣рд╛ рд╣реИ...',
    bn: 'ЁЯдЦ Space AI ржкрзНрж░рж╕рзЗрж╕рж┐ржВ ржХрж░ржЫрзЗ...',
    ta: 'ЁЯдЦ Space AI роЪрпЖропро▓ро╛роХрпНроХроорпН роЪрпЖропрпНроХро┐ро▒родрпБ...',
    te: 'ЁЯдЦ Space AI р░кр▒Нр░░р░╛р░╕р▒Жр░╕р░┐р░Вр░Чр▒Н р░Ър▒Зр░╕р▒Нр░др▒Лр░Вр░жр░┐...'
  };

  return (
    <ResponsiveLayout>
      <EnhancedHeader 
        activeTab={activeTab} 
        setActiveTab={setActiveTab}
        currentLanguage={currentLanguage}
        setCurrentLanguage={setCurrentLanguage}
      />
      
      <div className="py-2 sm:py-6">
        <SmartStatsCards />

        {/* Main Content */}
        <div className="grid grid-cols-1 xl:grid-cols-3 gap-3 sm:gap-6">
          {/* Chat/Graph Panel */}
          <div className="xl:col-span-2">
            <Card className="bg-card/90 backdrop-blur-sm h-[400px] sm:h-[600px] flex flex-col shadow-2xl border border-primary/20 cosmic-glow">
              <CardHeader className="pb-3">
                <CardTitle className="flex items-center justify-between">
                  <div className="flex items-center space-x-2">
                    {activeTab === 'chat' ? (
                      <>
                        <Bot className="h-5 w-5 text-primary space-float" />
                        <span className="bg-gradient-to-r from-primary to-accent bg-clip-text text-transparent">
                          Space AI Assistant
                        </span>
                      </>
                    ) : (
                      <>
                        <Search className="h-5 w-5 text-primary space-float" />
                        <span className="bg-gradient-to-r from-primary to-accent bg-clip-text text-transparent">
                          Knowledge Galaxy
                        </span>
                      </>
                    )}
                  </div>
                </CardTitle>
              </CardHeader>
              
              {activeTab === 'chat' ? (
                <>
                  <CardContent className="flex-1 overflow-y-auto p-3 sm:p-4 space-y-4">
                    {messages.map((message) => (
                      <ChatMessage key={message.id} message={message} />
                    ))}
                    {isTyping && (
                      <div className="flex items-center space-x-2 text-muted-foreground">
                        <Bot className="h-4 w-4 space-float" />
                        <div className="flex space-x-1">
                          <div className="animate-bounce w-2 h-2 bg-primary rounded-full"></div>
                          <div className="animate-bounce w-2 h-2 bg-primary rounded-full" style={{animationDelay: '0.1s'}}></div>
                          <div className="animate-bounce w-2 h-2 bg-primary rounded-full" style={{animationDelay: '0.2s'}}></div>
                        </div>
                        <span className="text-sm">{typingTexts[currentLanguage]}</span>
                      </div>
                    )}
                    <div ref={messagesEndRef} />
                  </CardContent>
                  
                  <div className="p-3 sm:p-4 border-t border-primary/20 bg-muted/30">
                    <div className="flex space-x-2">
                      <Input
                        value={inputValue}
                        onChange={(e) => setInputValue(e.target.value)}
                        onKeyPress={handleKeyPress}
                        placeholder={placeholders[currentLanguage]}
                        className="flex-1 bg-background border-primary/30 text-sm focus:border-primary"
                      />
                      <Button 
                        onClick={handleSendMessage} 
                        disabled={!inputValue.trim()}
                        className="bg-gradient-to-r from-primary to-accent hover:from-primary/80 hover:to-accent/80 cosmic-glow"
                        size="sm"
                      >
                        <Send className="h-4 w-4" />
                      </Button>
                    </div>
                  </div>
                </>
              ) : (
                <CardContent className="flex-1 p-0">
                  <KnowledgeGraph />
                </CardContent>
              )}
            </Card>
          </div>

          {/* Sidebar */}
          <div className="space-y-3 sm:space-y-6">
            <QuerySuggestions onSuggestionClick={handleSuggestionClick} currentLanguage={currentLanguage} />
            
            <Card className="bg-card/90 backdrop-blur-sm shadow-2xl border border-primary/20">
              <CardHeader>
                <CardTitle className="flex items-center space-x-2">
                  <Satellite className="h-5 w-5 text-accent space-float" />
                  <span>Space AI Capabilities</span>
                </CardTitle>
              </CardHeader>
              <CardContent className="space-y-3">
                <div className="grid grid-cols-1 gap-2">
                  {['ЁЯЫ░я╕П Satellite Data Analysis', 'ЁЯМН Multi-language Support', 'ЁЯОЩя╕П Voice Commands', 'тЪб Real-time Processing', 'ЁЯТб Smart Suggestions', 'ЁЯза Context Awareness'].map((capability) => (
                    <Badge key={capability} variant="secondary" className="justify-center py-1 text-xs bg-primary/10 text-primary hover:bg-primary/20 transition-colors">
                      {capability}
                    </Badge>
                  ))}
                </div>
              </CardContent>
            </Card>

            <Card className="bg-card/90 backdrop-blur-sm shadow-2xl border border-primary/20">
              <CardHeader>
                <CardTitle className="flex items-center space-x-2">
                  <Search className="h-5 w-5 text-accent space-float" />
                  <span>Space Mission Entities</span>
                </CardTitle>
              </CardHeader>
              <CardContent>
                <div className="flex flex-wrap gap-2">
                  {['ЁЯЫ░я╕П INSAT-3D', 'ЁЯМК Oceansat-2', 'ЁЯМ▒ NDVI', 'ЁЯУК HDF5', 'ЁЯУб AWiFS', 'ЁЯФм L3 Products', 'ЁЯЪА MOSDAC', 'ЁЯЫ░я╕П Resourcesat'].map((entity) => (
                    <Badge key={entity} variant="outline" className="text-xs hover:bg-primary/10 cursor-pointer transition-colors border-primary/30">
                      {entity}
                    </Badge>
                  ))}
                </div>
              </CardContent>
            </Card>
          </div>
        </div>
      </div>
    </ResponsiveLayout>
  );
};

export default Index;
